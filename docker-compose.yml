// docker-compose.yml
version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:14
    container_name: student-interview-db
    environment:
      POSTGRES_DB: interview
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: Tct85329$
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - app-network
    restart: unless-stopped

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: student-interview-api
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=interview
      - DB_USER=postgres
      - DB_PASSWORD=Tct85329$
      - PORT=5000
      - NODE_ENV=production
      - FRONTEND_URL=http://localhost:3003
    ports:
      - "5000:5000"
    depends_on:
      - postgres
    networks:
      - app-network
    restart: unless-stopped
    volumes:
      - ./data:/app/data

  # Frontend Application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: student-interview-web
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:5000/api
    ports:
      - "3003:3003"
    depends_on:
      - backend
    networks:
      - app-network
    restart: unless-stopped

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:

// backend/Dockerfile
FROM node:18-alpine

WORKDIR /app

COPY package*.json ./

RUN npm install --production

COPY . .

# Create directory for upload files if it doesn't exist
RUN mkdir -p uploads

EXPOSE 5000

CMD ["node", "server.js"]

// frontend/Dockerfile
FROM node:18-alpine

WORKDIR /app

COPY package*.json ./

RUN npm install

COPY . .

RUN npm run build

EXPOSE 3003

CMD ["npm", "start"]

// .gitignore
# Dependencies
node_modules/
.pnp/
.pnp.js

# Next.js
.next/
out/

# Production
build/
dist/

# Misc
.DS_Store
*.pem
Thumbs.db

# Debug
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Local env files
.env*.local
.env

# Uploads
uploads/
